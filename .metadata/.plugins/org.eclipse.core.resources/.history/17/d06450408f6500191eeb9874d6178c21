package serialization;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamException;
import java.io.OutputStream;
import java.io.Serializable;

public class SingletonClass implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private static SingletonClass INSTANCE = null;

	public static SingletonClass getInstance() {
		if (INSTANCE == null) {
			synchronized (SingletonClass.class) {
				INSTANCE = new SingletonClass();
			}
		}
		return INSTANCE;
	}

	private SingletonClass() {

	}

	public void readObject(ObjectInputStream ois) throws IOException, ClassNotFoundException {
		System.out.println("In readObjectmekthod");
		ois.defaultReadObject();
		synchronized (SingletonClass.class) {

			if (INSTANCE == null) {
				INSTANCE = this;
			}
		}
	}

	private Object readResolve() throws ObjectStreamException {
		System.out.println("In ReadResolve method");
		return INSTANCE;
	}

	public static void main(String[] args) throws Throwable {
		System.out.println("Are objects same before serialization : " + (getInstance() == getInstance()));

		OutputStream fout = new FileOutputStream("ser.txt");
		ObjectOutput oout = new ObjectOutputStream(fout);
		System.out.println("Serialization process has started...");
		oout.writeObject(getInstance());
		fout.close();
		oout.close();
		System.out.println("Object Serialization completed.");

		// DeSerialization process >>>>>>>.

		InputStream fin = new FileInputStream("ser.txt");
		ObjectInput oin = new ObjectInputStream(fin);
		System.out.println("\nDeSerialization process has started...");
		SingletonClass deSerializedObj = (SingletonClass) oin.readObject();
		fin.close();
		oin.close();
		System.out.println("Object DeSerialization completed.");
		System.out.println("Are objects same after serialization : " + (deSerializedObj == getInstance()));

	}
}
